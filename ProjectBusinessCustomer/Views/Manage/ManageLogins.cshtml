@model ProjectBusinessCustomer.Models.ManageLoginsViewModel
@using Microsoft.Owin.Security
@{
    ViewBag.Title = "Gérer vos connexions externes";
}
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="@Url.Action("Customers", "Customer")">Employées</a>
        </li>
        <li>
            <a href="@Url.Action("index", "Manage")">Mon profil</a>
        </li>
        <li class="active">Gérer vos connexions externes.</li>
    </ul>
</div>

<div class="page-content">
    <h2>@ViewBag.Title.</h2>

    <p class="text-success">@ViewBag.StatusMessage</p>
    @{
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
        if (loginProviders.Count() == 0)
        {
            <div>
                <p>
                    Aucun service d'authentification externe n'est configuré. Consultez <a href="https://go.microsoft.com/fwlink/?LinkId=313242">cet article</a>
                    pour plus de détails sur la configuration de cette application ASP.NET afin qu'elle prenne en charge la connexion par l'intermédiaire de services externes.
                </p>
            </div>
        }
        else
        {
            if (Model.CurrentLogins.Count > 0)
            {
                <h4>Connexions inscrites</h4>
                <table class="table">
                    <tbody>
                        @foreach (var account in Model.CurrentLogins)
                        {
                            <tr>
                                <td>@account.LoginProvider</td>
                                <td>
                                    @if (ViewBag.ShowRemoveButton)
                                    {
                                        using (Html.BeginForm("RemoveLogin", "Manage"))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div>
                                                @Html.Hidden("loginProvider", account.LoginProvider)
                                                @Html.Hidden("providerKey", account.ProviderKey)
                                                <input type="submit" class="btn btn-default" value="Supprimer" title="Suppression de cette connexion @account.LoginProvider de votre compte" />
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        @: &nbsp;
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            if (Model.OtherLogins.Count > 0)
            {
                using (Html.BeginForm("LinkLogin", "Manage"))
                {
                    @Html.AntiForgeryToken()
                    <div id="socialLoginList">
                        <p>
                            @foreach (AuthenticationDescription p in Model.OtherLogins)
                            {
                                <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Connexion avec votre compte @p.Caption">@p.AuthenticationType</button>
                            }
                        </p>
                    </div>
                }
            }
        }
    }
</div><!-- /.page-content -->
